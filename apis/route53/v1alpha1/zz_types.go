/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Hack to avoid import errors during build...
var (
	_ = &metav1.Time{}
)

type AliasTarget struct {
	DNSName *string `json:"dnsName,omitempty"`

	HostedZoneID *string `json:"hostedZoneID,omitempty"`

	EvaluateTargetHealth bool `json:"evaluateTargetHealth"`
}

type ChangeInfo struct {
	ID *string `json:"id,omitempty"`
}

type DelegationSet struct {
	CallerReference *string `json:"callerReference,omitempty"`

	ID *string `json:"id,omitempty"`

	NameServers []*string `json:"nameServers,omitempty"`
}

// +kubebuilder:object:root=true

// HostedZone is a managed resource that represents an AWS Route53 Hosted HostedZone.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="ID",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="RRs",type="integer",JSONPath=".status.atProvider.hostedZone.resourceRecordSetCount"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type HostedZone struct {
	// CallerReference *string `json:"callerReference,omitempty"`

	// ID *string `json:"id,omitempty"`

	// Name *string `json:"name,omitempty"`
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   HostedZoneSpec   `json:"spec"`
	Status HostedZoneStatus `json:"status,omitempty"`
}

type HostedZoneSummary struct {
	HostedZoneID *string `json:"hostedZoneID,omitempty"`

	Name *string `json:"name,omitempty"`
}

type QueryLoggingConfig struct {
	HostedZoneID *string `json:"hostedZoneID,omitempty"`
}

// +kubebuilder:object:root=true

// ResourceRecordSet is a managed resource that represents an AWS Route53 Resource Record.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="TYPE",type="string",JSONPath=".spec.forProvider.type"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type ResourceRecordSet struct {
	// Name *string `json:"name,omitempty"`
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   ResourceRecordSetSpec   `json:"spec"`
	Status ResourceRecordSetStatus `json:"status,omitempty"`
}

type TrafficPolicyInstance struct {
	HostedZoneID *string `json:"hostedZoneID,omitempty"`

	Name *string `json:"name,omitempty"`
}
