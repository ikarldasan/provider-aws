/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Hack to avoid import errors during build...
var (
	_ = &metav1.Time{}
)

type BounceAction struct {
	TopicARN *string `json:"topicARN,omitempty"`
}

type BouncedRecipientInfo struct {
	RecipientARN *string `json:"recipientARN,omitempty"`
}

type CloudWatchDestination struct {
	DimensionConfigurations []*CloudWatchDimensionConfiguration `json:"dimensionConfigurations,omitempty"`
}

type CloudWatchDimensionConfiguration struct {
	DefaultDimensionValue *string `json:"defaultDimensionValue,omitempty"`

	DimensionName *string `json:"dimensionName,omitempty"`

	DimensionValueSource *string `json:"dimensionValueSource,omitempty"`
}

type ConfigurationSet_SDK struct {
	Name *string `json:"name,omitempty"`
}

type DeliveryOptions struct {
	TLSPolicy *string `json:"tlsPolicy,omitempty"`
}

type EventDestination struct {
	// Contains information associated with an Amazon CloudWatch event destination
	// to which email sending events are published.
	//
	// Event destinations, such as Amazon CloudWatch, are associated with configuration
	// sets, which enable you to publish email sending events. For information about
	// using configuration sets, see the Amazon SES Developer Guide (https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html).
	CloudWatchDestination *CloudWatchDestination `json:"cloudWatchDestination,omitempty"`

	Enabled *bool `json:"enabled,omitempty"`
	// Contains the delivery stream ARN and the IAM role ARN associated with an
	// Amazon Kinesis Firehose event destination.
	//
	// Event destinations, such as Amazon Kinesis Firehose, are associated with
	// configuration sets, which enable you to publish email sending events. For
	// information about using configuration sets, see the Amazon SES Developer
	// Guide (https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html).
	KinesisFirehoseDestination *KinesisFirehoseDestination `json:"kinesisFirehoseDestination,omitempty"`

	MatchingEventTypes []*string `json:"matchingEventTypes,omitempty"`

	Name *string `json:"name,omitempty"`
	// Contains the topic ARN associated with an Amazon Simple Notification Service
	// (Amazon SNS) event destination.
	//
	// Event destinations, such as Amazon SNS, are associated with configuration
	// sets, which enable you to publish email sending events. For information about
	// using configuration sets, see the Amazon SES Developer Guide (https://docs.aws.amazon.com/ses/latest/DeveloperGuide/monitor-sending-activity.html).
	SNSDestination *SNSDestination `json:"sNSDestination,omitempty"`
}

type IDentityDkimAttributes struct {
	DkimEnabled *bool `json:"dkimEnabled,omitempty"`
}

type IDentityNotificationAttributes struct {
	ForwardingEnabled *bool `json:"forwardingEnabled,omitempty"`

	HeadersInBounceNotificationsEnabled *bool `json:"headersInBounceNotificationsEnabled,omitempty"`

	HeadersInComplaintNotificationsEnabled *bool `json:"headersInComplaintNotificationsEnabled,omitempty"`

	HeadersInDeliveryNotificationsEnabled *bool `json:"headersInDeliveryNotificationsEnabled,omitempty"`
}

type KinesisFirehoseDestination struct {
	DeliveryStreamARN *string `json:"deliveryStreamARN,omitempty"`

	IAMRoleARN *string `json:"iamRoleARN,omitempty"`
}

type LambdaAction struct {
	FunctionARN *string `json:"functionARN,omitempty"`

	TopicARN *string `json:"topicARN,omitempty"`
}

type ReceiptRule struct {
	Enabled *bool `json:"enabled,omitempty"`

	ScanEnabled *bool `json:"scanEnabled,omitempty"`

	TLSPolicy *string `json:"tlsPolicy,omitempty"`
}

type ReputationOptions struct {
	LastFreshStart *metav1.Time `json:"lastFreshStart,omitempty"`

	ReputationMetricsEnabled *bool `json:"reputationMetricsEnabled,omitempty"`

	SendingEnabled *bool `json:"sendingEnabled,omitempty"`
}

type S3Action struct {
	KMSKeyARN *string `json:"kmsKeyARN,omitempty"`

	TopicARN *string `json:"topicARN,omitempty"`
}

type SNSAction struct {
	TopicARN *string `json:"topicARN,omitempty"`
}

type SNSDestination struct {
	TopicARN *string `json:"topicARN,omitempty"`
}

type StopAction struct {
	TopicARN *string `json:"topicARN,omitempty"`
}

type TrackingOptions struct {
	CustomRedirectDomain *string `json:"customRedirectDomain,omitempty"`
}

type WorkmailAction struct {
	OrganizationARN *string `json:"organizationARN,omitempty"`

	TopicARN *string `json:"topicARN,omitempty"`
}
